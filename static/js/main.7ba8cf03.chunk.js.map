{"version":3,"sources":["components/form/input/Input.jsx","components/form/button/RButton.jsx","components/form/formcontainer/FormContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","props","Form","Group","as","Col","md","controlId","Label","title","Control","type","placeholder","name","onChange","handleChange","RButton","Button","className","variant","size","onClick","handleClick","value","FormContainer","state","books","validation","handleSubmit","bind","deleteBook","event","preventDefault","target","booktitle","author","bookauthor","isbn","bookisbn","this","setState","console","log","localStorage","setItem","JSON","stringify","isbnNo","parentElement","previousElementSibling","textContent","booksData","parse","getItem","booksArray","filter","book","map","ele","push","onSubmit","Row","bookTitle","bookAuthor","bookISBN","Table","striped","bordered","hover","id","colSpan","Component","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ba8cf03.chunk.js","sourcesContent":["import React from 'react';\nimport { Col, Form } from 'react-bootstrap';\n\nconst Input = (props) => {\n  return (\n    <Form.Group as={Col} md={4} controlId={props.controlId}>\n      <Form.Label>{props.title}</Form.Label>\n      <Form.Control\n        type={props.type}\n        placeholder={props.placeholder}\n        name={props.name}\n        onChange={props.handleChange}\n      />\n    </Form.Group>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\n\nconst RButton = (props) => {\n  return (\n    <>\n      <Button\n        type={props.type}\n        className={props.className}\n        variant={props.variant}\n        size={props.size}\n        onClick={props.handleClick}>\n        {props.value}\n      </Button>\n    </>\n  );\n};\n\nexport default RButton;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Table from 'react-bootstrap/Table';\nimport Input from '../input/Input';\nimport RButton from '../button/RButton';\n\nclass FormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { books: [], validation: true };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.deleteBook = this.deleteBook.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    //get form values on submit\n    const title = event.target.booktitle.value;\n    const author = event.target.bookauthor.value;\n    const isbn = event.target.bookisbn.value;\n\n    //handle validation\n    if (title === '' || author === '' || isbn === '') {\n      this.setState(\n        {\n          validation: 'error',\n        },\n        () => {\n          console.log(this.state);\n        }\n      );\n\n      return false;\n    }\n\n    this.setState(\n      {\n        books: [\n          ...this.state.books,\n          { title: title, author: author, isbn: isbn },\n        ],\n        validation: 'added',\n      },\n      () => {\n        console.log(this.state);\n        event.target.booktitle.value = '';\n        event.target.bookauthor.value = '';\n        event.target.bookisbn.value = '';\n        localStorage.setItem('data', JSON.stringify(this.state));\n      }\n    );\n  }\n\n  deleteBook(event) {\n    const isbnNo =\n      event.target.parentElement.previousElementSibling.textContent;\n    const booksData = JSON.parse(localStorage.getItem('data'));\n    console.log(isbnNo);\n    const booksArray = booksData.books.filter((book) => book.isbn !== isbnNo);\n    console.log(booksArray);\n\n    this.setState(\n      {\n        books: booksArray,\n        validation: 'removed',\n      },\n      () => {\n        console.log(this.state);\n        localStorage.setItem('data', JSON.stringify(this.state));\n      }\n    );\n  }\n\n  componentDidMount() {\n    const booksData = JSON.parse(localStorage.getItem('data'));\n\n    if (booksData) {\n      const booksArray = [];\n      booksData.books.map((ele) => booksArray.push(ele));\n\n      //console.log(booksArray);\n\n      this.setState(\n        {\n          books: booksArray,\n          validation: '',\n        },\n        () => {\n          console.log(this.state);\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='form-wrapper'>\n          {this.state.validation === 'error' && (\n            <div className='alert alert-danger'>\n              Please fill in all the fields!\n            </div>\n          )}\n          {this.state.validation === 'added' && (\n            <div className='alert alert-success'>New Book Added...</div>\n          )}\n          {this.state.validation === 'removed' && (\n            <div className='alert alert-info'>Book Removed...</div>\n          )}\n\n          <Form onSubmit={this.handleSubmit}>\n            <Row>\n              <Input\n                type={'text'}\n                title={'Book Title'}\n                name={'booktile'}\n                placeholder={'Enter Book Title'}\n                controlId={'booktitle'}\n                handleChange={this.bookTitle}\n              />\n\n              <Input\n                type={'text'}\n                title={'Book Author'}\n                name={'bookauthor'}\n                placeholder={'Enter Book Author'}\n                controlId={'bookauthor'}\n                handleChange={this.bookAuthor}\n              />\n\n              <Input\n                type={'text'}\n                title={'Book ISBN#'}\n                name={'bookisbn'}\n                placeholder={'Enter Book ISBN#'}\n                controlId={'bookisbn'}\n                handleChange={this.bookISBN}\n              />\n              {/* <Form.Group as={Col} md={4} controlId='booktitle'>\n                <Form.Label>Book Title</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter Book Title'\n                  name='booktitle'\n                />\n              </Form.Group>\n              <Form.Group as={Col} md={4} controlId='bookauthor'>\n                <Form.Label>Book Author</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter Book Author'\n                  name='bookauthor'\n                />\n              </Form.Group>\n              <Form.Group as={Col} md={4} controlId='bookisbn'>\n                <Form.Label>Book ISBN#</Form.Label>\n                <Form.Control\n                  type='text'\n                  placeholder='Enter Book ISBN#'\n                  name='bookisbn'\n                />\n              </Form.Group> */}\n            </Row>\n            <Row>\n              <Col>\n                {/* <Button variant='primary' type='submit'>\n                  Add Book\n                </Button> */}\n                <RButton\n                  variant={'primary'}\n                  type={'submit'}\n                  value={'Add Book'}\n                />\n              </Col>\n            </Row>\n          </Form>\n        </div>\n        <hr />\n\n        <div className='out-wrapper'>\n          <h3 className='bg bg-default'>Book Lists:</h3>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>Book Title</th>\n                <th>Book Author</th>\n                <th>Book isbn#</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.books.map((book) => (\n                <tr key={book.isbn} id={book.isbn}>\n                  <td>{book.title}</td>\n                  <td>{book.author}</td>\n                  <td>{book.isbn}</td>\n                  <td>\n                    {/* <Button\n                      className='delete'\n                      variant='danger'\n                      size='sm'\n                      onClick={this.deleteBook}>\n                      X\n                    </Button> */}\n                    <RButton\n                      className={'delete'}\n                      variant={'danger'}\n                      size={'sm'}\n                      value={'Delete Book'}\n                      handleClick={this.deleteBook}\n                    />\n                  </td>\n                </tr>\n              ))}\n              {this.state.books == '' && (\n                <tr>\n                  <td colSpan={4}>No Data found</td>\n                </tr>\n              )}\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FormContainer;\n","import './App.css';\n\nimport { Container, Row, Col } from 'react-bootstrap';\nimport FormContainer from './components/form/formcontainer/FormContainer';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <Container>\n          <Row>\n            <Col className='text-center'>\n              <h1> Books App </h1>\n              <span> Reactjs Book library with localstorage </span>\n            </Col>\n          </Row>\n        </Container>\n      </header>\n      <hr />\n      <main>\n        <Container>\n          <Row>\n            <Col>\n              <FormContainer></FormContainer>\n            </Col>\n          </Row>\n        </Container>\n      </main>\n      <footer></footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}